#!/bin/bash

# Create directory to store data
mkdir -p pokemon_data

# List of Pokémon
pokemon_list=("bulbasaur" "ivysaur" "venusaur" "charmander" "charmeleon")

# Max wait time per request (seconds)
TIMEOUT=10

# Function to fetch data with timeout and kill if exceeded
fetch_pokemon() {
  name=$1
  echo "Fetching $name..."

  # Start curl in background
  curl -s "https://pokeapi.co/api/v2/pokemon/$name" -o "pokemon_data/${name}.json" &
  pid=$!

  # Wait up to $TIMEOUT seconds
  SECONDS_WAITED=0
  while kill -0 $pid 2>/dev/null && [[ $SECONDS_WAITED -lt $TIMEOUT ]]; do
    sleep 1
    ((SECONDS_WAITED++))
  done

  # If still running, kill it
  if kill -0 $pid 2>/dev/null; then
    echo "⏱️ Timeout! Killing $name fetch process (PID: $pid)"
    kill $pid
    wait $pid 2>/dev/null
  else
    wait $pid
    if [[ -s "pokemon_data/${name}.json" ]]; then
      echo "✅ $name fetched successfully."
    else
      echo "❌ Failed to fetch $name."
    fi
  fi
}

# Fetch all in parallel
for name in "${pokemon_list[@]}"; do
  fetch_pokemon "$name" &
done

# Wait for all background jobs
wait

echo "✅ All Pokémon data fetched."
